box: 
  id: openjdk
  ports:
    - 8080

#Build our application using Maven, just as we always have
build:
  steps:
    - install-packages:
        packages: maven jq
    - script:
        name: maven build
        code: |
          mvn clean assembly:assembly
    - script:
        name: push to storage cloud
        code: |
          jq --version
          curl -i -X PUT -u $USERNAME:$PASSWORD -T $WERCKER_ROOT/target/twitter-microservice-example-dist.zip https://$IDENTITY_DOMAIN.us.storage.oraclecloud.com/v1/Storage-$IDENTITY_DOMAIN/_apaas/twitterfeed.zip
          
deploy:
  steps:
    - script:
        name: deploy to accs
        code: |
          echo {"memory": "1G", "instances": "1"} > minapp.json
          if(( $(curl -i -X GET -u $USERNAME:$PASSWORD -H "X-ID-TENANT-NAME:$TENANT" https://apaas.us.oraclecloud.com/paas/service/apaas/api/v1.1/apps/$TENANT/$APPNAME | grep -c "webURL" ) > 0 )); 
          then printf "Application TwitterFeed Found"; 
          else printf "No TwitterFeed Found"; fi
          #curl -i -X POST -u $USERNAME:$PASSWORD -H "X-ID-TENANT-NAME:$TENANT" -H "Content-Type: multipart/form-data" -F "archiveURL=_apaas/twitterfeed.zip" -F "name=$APPNAME" -F "runtime=java" -F "subscription=Hourly" -F "deployment=@minapp.json" https://apaas.us.oraclecloud.com/paas/service/apaas/api/v1.1/apps/$TENANT
          #curl -i -X PUT -u $USERNAME:$PASSWORD -H "X-ID-TENANT-NAME:$TENANT" -H "Content-Type: multipart/form-data" -F "archiveURL=_apaas/twitterfeed.zip" -F "name=$APPNAME" -F "runtime=java" -F "subscription=Hourly" -F "deployment=@minapp.json" https://apaas.us.oraclecloud.com/paas/service/apaas/api/v1.1/apps/$TENANT/$APPNAME
        
verify:
  steps:
    - install-packages:
        packages: jq
    - script:
        name: accs application check
        code: |
          curl -X GET -u $USERNAME:$PASSWORD -H "X-ID-TENANT-NAME:$TENANT" https://apaas.us.oraclecloud.com/paas/service/apaas/api/v1.1/apps/$TENANT/$APPNAME > accs-list.json
          echo "Looking for web URL of ACCS application:"
          jq '.webURL' accs-list.json
